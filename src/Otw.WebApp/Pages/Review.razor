@page "/review"
@using Otw.Core.Application.Review
@using Otw.Core.Domain

@inject ILastWordQueryHandler LastWordHandler
@inject INextWordCmdHandler NextWordHandler

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h3 class="text-center mb-4">Review</h3>

            @if (_currentWord is not null)
            {
                <div class="card shadow-sm text-center">
                    <div class="card-body">
                        <h5 class="card-title display-2 text-primary">@_currentWord.Value</h5>
                        <p class="card-text fs-3 mb-4 text-success" style="visibility:@(_showTranslation ? "visible" : "hidden")">@_currentWord.Translation</p>

                        <button class="btn btn-secondary me-2" @onclick="ShowTranslation">Show translation</button>
                        <button class="btn btn-primary" @onclick="LoadNextWord">Next Word</button>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center mt-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading data...</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private WordEntity? _currentWord;
    private bool _showTranslation;
    
    protected override async Task OnInitializedAsync()
    {
        _currentWord = await LastWordHandler.ExecuteAsync();
    }
    
    private async Task LoadNextWord()
    {
        if (_currentWord is not null)
        {
            _currentWord = await NextWordHandler.ExecuteAsync(_currentWord.Id);
            _showTranslation = false;
        }
    }

    private void ShowTranslation()
    {
        _showTranslation = true;
    }
}
